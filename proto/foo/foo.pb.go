// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/foo.proto

package foo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = strings.TrimPrefix

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FooBar struct {
	//
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (m *FooBar) Validate() error {
	return nil
}

func (m *FooBar) Reset()         { *m = FooBar{} }
func (m *FooBar) String() string { return proto.CompactTextString(m) }
func (*FooBar) ProtoMessage()    {}
func (*FooBar) Descriptor() ([]byte, []int) {
	return fileDescriptor_338bc3f58774e487, []int{0}
}

func (m *FooBar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooBar.Unmarshal(m, b)
}
func (m *FooBar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooBar.Marshal(b, m, deterministic)
}
func (m *FooBar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooBar.Merge(m, src)
}
func (m *FooBar) XXX_Size() int {
	return xxx_messageInfo_FooBar.Size(m)
}
func (m *FooBar) XXX_DiscardUnknown() {
	xxx_messageInfo_FooBar.DiscardUnknown(m)
}

var xxx_messageInfo_FooBar proto.InternalMessageInfo

func (m *FooBar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*FooBar)(nil), "foo.FooBar")
}

func init() { proto.RegisterFile("proto/foo.proto", fileDescriptor_338bc3f58774e487) }

var fileDescriptor_338bc3f58774e487 = []byte{
	// 75 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x04, 0x03, 0x02, 0x01, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xcb, 0xcf, 0xd7, 0x03, 0xb3, 0x84, 0x98, 0xd3, 0xf2, 0xf3, 0x95, 0x64, 0xb8,
	0xd8, 0xdc, 0xf2, 0xf3, 0x9d, 0x12, 0x8b, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0xec, 0x24, 0x36, 0xb0, 0x4a, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xec, 0xef, 0xbe, 0xc6, 0x3c, 0x00, 0x00, 0x00,
}
